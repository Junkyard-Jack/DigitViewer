/* yc_TextReader_headers.h - .txt Reader Object
 * 
 * Author           : Alexander J. Yee
 * Date Created     : 07/13/2013
 * Last Modified    : 07/28/2013
 * 
 */

#pragma once
#ifndef _yc_TextReader_headers_H
#define _yc_TextReader_headers_H
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
//  Dependencies
#include "yc_DigitReader_headers.h"
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
namespace DigitViewer{
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
class TextReader : public DigitReader{
public:
    virtual ~TextReader();

    //  Open a new reader. You must pass it full path of the .txt file.
    //  For ASCII char output, use:   raw = false
    //  For raw integer output, use:  raw = true
    TextReader(
        const std::wstring &path,
        bool raw = false,
        int radix = 0
    );

    //  Refer to the abstract class for documentation of these virtual functions.
    virtual void        print           () const;
    virtual int         get_radix       () const;
    virtual ym_fL       get_digits      () const;
    virtual void        set_raw         (bool raw);
    virtual bool        check_range     (ym_uL start,ym_uL end);
    virtual std::string get_first_digits(ym_pL L);
    virtual void        read            (ym_uL pos,char *str,ym_pL digits);

    void                set_radix       (int radix);

private:
    ym_file file;                   //  File handle
    int radix;                      //  Radix of the digits. (10 or 16)

    int (*fp_convert)(char*,ym_pL); //  Function pointer for digit conversion.
    ym_fL dp_offset;                //  Offset in the file of the first digit after the decimal place.
    ym_fL total_digits;             //  Digits after the decimal place.

    void auto_detect_radix  ();
};
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
}
#endif
