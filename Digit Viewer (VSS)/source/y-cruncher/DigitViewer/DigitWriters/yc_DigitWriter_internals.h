/* yc_DigitWriter_internals.h - File Writer Object Interface
 * 
 * Author           : Alexander J. Yee
 * Date Created     : 04/03/2012
 * Last Modified    : 07/28/2013
 * 
 */

#pragma once
#ifndef _yc_DigitWriter_internals_H
#define _yc_DigitWriter_internals_H
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
//  Dependencies
#include "yc_DigitWriter_headers.h"
#include "yc_TextWriter_internals.h"
#include "yc_YCDFileWriter_internals.h"
#include "yc_YCDWriter_internals.h"
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
namespace DigitViewer{
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
DigitWriter::DigitWriter()
    : buffer(NULL)
    , buffer_L(0)
    , iter_f_offset(0)
    , iter_b_offset(buffer_L)
{
}
DigitWriter::~DigitWriter(){
    ym_heap::free(buffer);
}
void DigitWriter::push(const char *str,ym_pL digits){
    while (digits > 0){
        //  Buffer is full
        if (iter_b_offset == buffer_L){
            flush();
        }

        ym_pL block = buffer_L - iter_b_offset;
        if (block > digits)
            block = digits;

        memcpy(&buffer[0] + iter_b_offset,str,block);
        
        iter_f_offset += block;
        iter_b_offset += block;
        str += block;
        digits -= block;
    }
}
void DigitWriter::flush(){
    //  Buffer isn't initialized yet.
    if (buffer_L == 0){
        ym_pL buffer_size = YC_DIGITWRITER_DEFAULT_BUFFER;
        buffer = (char*)ym_heap::malloc(NULL,buffer_size,2*sizeof(ym_u64));

        //  Do this assignment last - just in case the above throws.
        buffer_L = buffer_size;
    }else{
        //  Write
        write(buffer,iter_b_offset);
    }

    //  Clear the buffer
    iter_b_offset = 0;
}
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
}
#endif
